[ 수업 목표 ]

1. 어레이와 링크드리스트에 대해 배우고 차이점을 익힌다.
2. 이진 탐색의 효율성과 전제 조건에 대해 배운다.
3. 재귀함수의 방법과 전제 조건에 대해 배운다.

〈Array〉
- 특정 원소 조회: O(1)
- 중간에 삽입/삭제: O(N)
- 데이터 추가 시, 모든 공간이 다 차버렸다면 새로운 메모리 공간을 할당받아야 한다.
∴ 데이터에 접근하는 경우가 빈번하다면 Array 사용!!

〈Linked List〉
- 특정 원소 조회: O(N)
- 중간에 삽입/삭제: O(1)
- 데이터 추가 시, 모든 공간이 다 찼어도 맨 뒤의 노드만 동적으로 추가하면 된다.
∴ 삽입과 삭제가 빈번하다면 Linked List를 사용하는 것이 더 효율적이다.

〈이진 탐색 Binary search〉
- 범위 내에 존재하는 값을 찾아내기 위해 사용하는 탐색 방법으로, 범위의 절반을 원하는 값과 대조하면서 값을 찾아나가는 방법

* cf. 〈순차 탐색 Sequential search〉
        - 범위 내 존재하는 값을 찾아내기 위해 사용하는 탐색 방법으로, 처음부터 대조하여 값을 찾는다.

〈재귀 함수〉
- 재귀: 어떠한 것을 정의할 때 자기 자신을 참조하는 것
- 재귀 함수: 자기 자신을 호출함.
- 재귀 함수를 이용하면 간결하고 효율성 있는 코드를 작성할 수 있다.
- 사용 예시: 팩토리얼 값 구하기
- 주의할 점: 반드시 탈출 조건을 지정해야 한다.
