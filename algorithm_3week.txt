[ 수업 목표 ]
1. 정렬의 다양한 방법과 구현 방법에 대해 배운다.
2. 스택, 큐의 개념과 활용법에 대해 배운다.
3. 해쉬 개념과 활용법에 대해 배운다.

〈정렬〉
- 데이터를 순서대로 나열하는 방법
- 버블 정렬: (n-1)번째 자료와 n번째 자료를 비교하여 교환하면서 자료를 정리하는 방식
- 선택 정렬: 한 번 자료를 둘러보며 가장 작은 값을 맨 앞으로 끌어오는 정리 방식. 전체에서 최솟값을 선택.
- 삽입 정렬: 전체에서 하나씩 올바른 위치에 삽입하는 방식. 필요할 때만 위치를 변경하므로 더 선택 정렬보다 더 효율적인 방식이다.
- 병합 정렬: 배열의 앞부분과 뒷부분의 두 그룹으로 나누어 각각 정렬한 후 병합하는 작업을 반복하는 알고리즘

〈스택〉
- 한쪽 끝으로만 자료를 넣고 뺄 수 있는 자료 구조
- Last In First Out
- 넣은 순서를 쌓아두므로 되돌리기 기능과 같은 일련의 행동을 순서대로 기억해야 할 때 사용한다.

>> 스택에서 제공하는 기능
ㆍpush(data): 맨 앞에 데이터 넣기
ㆍpop(): 맨 앞의 데이터 뽑기
ㆍpeek(): 맨 앞의 데이터 보기
ㆍisEmpty(): 스택이 비었는지 안 비었는지 여부 반환해주기

〈큐〉
- 한쪽 끝으로 자료를 넣고, 반대쪽에서는 자료를 뺄 수 있는 선형 구조
- First In Last Out
- 순서대로 처리되어야 하는 일에 필요하다.

>> 큐에서 제공하는 기능
ㆍenqueue(data): 맨 뒤에 데이터 추가하기
ㆍdequeue(): 맨 앞의 데이터 뽑기
ㆍpeek(): 맨 앞의 데이터 보기
ㆍisEmpty(): 큐가 비었는지 안 비었는지 여부 반환해주기

〈해쉬〉
- 해쉬 알고리즘을 통해 문자열을 고정된 길이의 데이터로 만들 수 있다.
- 컴퓨팅에서 키를 값에 매핑할 수 있는 구조인, 연관 배열 추가에 사용되는 자료 구조
- 데이터의 검색과 저장이 아주 빠르게 진행된다.
- 해쉬 테이블(Hash Table): "키" 와 "데이터"를 저장함으로써 즉각적으로 데이터를 받아오고 업데이트하고 싶을 때 사용하는 자료구조
- 해쉬 함수(Hash Function)는 임의의 길이를 갖는 메시지를 입력하여 고정된 길이의 해쉬값을 출력하는 함수